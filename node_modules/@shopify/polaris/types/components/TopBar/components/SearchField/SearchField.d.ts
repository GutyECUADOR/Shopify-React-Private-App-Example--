import * as React from 'react';
import { WithAppProviderProps } from '../../../AppProvider';
export interface Props {
    /** Initial value for the input */
    value: string;
    /** Hint text to display */
    placeholder?: string;
    /** Force the focus state on the input */
    focused?: boolean;
    /** Force a state where search is active but the text field component is not focused */
    active?: boolean;
    /** Callback when value is changed */
    onChange(value: string): void;
    /** Callback when input is focused */
    onFocus?(): void;
    /** Callback when focus is removed */
    onBlur?(): void;
    /** Callback when search field cancel button is clicked */
    onCancel?(): void;
}
export declare type ComposedProps = Props & WithAppProviderProps;
export declare class SearchField extends React.Component<ComposedProps, never> {
    private input;
    private searchId;
    componentDidMount(): void;
    componentDidUpdate({ focused: wasFocused }: Props): void;
    render(): JSX.Element;
    private handleFocus;
    private handleBlur;
    private handleClear;
    private handleChange;
}
declare const _default: React.ComponentClass<Props, any> & typeof SearchField;
export default _default;
