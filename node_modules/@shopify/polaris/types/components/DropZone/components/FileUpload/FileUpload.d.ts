import * as React from 'react';
import { WithContextTypes } from '../../../../types';
import { WithAppProviderProps } from '../../../AppProvider';
import { DropZoneContext } from '../../types';
export interface State {
    actionTitle?: string;
    actionHint?: string;
}
export interface Props {
    actionTitle?: string;
    actionHint?: string;
}
declare type CombinedProps = Props & WithAppProviderProps & WithContextTypes<DropZoneContext>;
declare class FileUpload extends React.Component<CombinedProps, State> {
    static getDerivedStateFromProps({ actionTitle: nextActionTitle, actionHint: nextActionHint, polaris: { intl: { translate }, }, context: { type }, }: CombinedProps, { actionTitle, actionHint }: State): {
        actionTitle: string;
        actionHint: string;
    } | null;
    constructor(props: CombinedProps);
    render(): JSX.Element;
}
declare const _default: (React.ComponentClass<Props, any> & Pick<(React.ComponentClass<CombinedProps, any> & typeof FileUpload) | (React.FunctionComponent<CombinedProps> & typeof FileUpload), "defaultProps" | "prototype">) | (React.FunctionComponent<Props> & Pick<(React.ComponentClass<CombinedProps, any> & typeof FileUpload) | (React.FunctionComponent<CombinedProps> & typeof FileUpload), "defaultProps" | "prototype">);
export default _default;
