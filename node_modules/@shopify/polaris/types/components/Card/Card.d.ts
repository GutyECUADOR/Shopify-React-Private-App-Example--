import * as React from 'react';
import { DisableableAction, ComplexAction } from '../../types';
import { WithAppProviderProps } from '../AppProvider';
import { Header, Section, Subsection } from './components';
export interface Props {
    /** Title content for the card */
    title?: React.ReactNode;
    /** Inner content of the card */
    children?: React.ReactNode;
    /** A less prominent card */
    subdued?: boolean;
    /** Auto wrap content in section */
    sectioned?: boolean;
    /** Card header actions */
    actions?: DisableableAction[];
    /** Primary action in the card footer */
    primaryFooterAction?: ComplexAction;
    /** @deprecated Secondary action in the card footer */
    secondaryFooterAction?: ComplexAction;
    /** Secondary actions in the card footer */
    secondaryFooterActions?: ComplexAction[];
    /** The content of the disclosure button rendered when there is more than one secondary footer action */
    secondaryFooterActionsDisclosureText?: string;
}
export declare type CombinedProps = Props & WithAppProviderProps;
export interface State {
    secondaryFooterActionsPopoverOpen: boolean;
}
declare class Card extends React.PureComponent<CombinedProps, State> {
    static Section: typeof Section;
    static Header: typeof Header;
    static Subsection: typeof Subsection;
    static childContextTypes: import("prop-types").ValidationMap<any>;
    state: State;
    getChildContext(): {
        withinContentContainer: boolean;
    };
    render(): JSX.Element;
    private toggleSecondaryActionsPopover;
}
declare const _default: React.ComponentClass<Props, any> & typeof Card;
export default _default;
